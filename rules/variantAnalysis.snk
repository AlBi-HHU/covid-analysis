### Helper Functions for Aggregation

def fetchAllVCFs():
    list = []
    for run in barcodes:
        list+= expand('data/input/'+run+'/barcode{barcode}.{method}.'+config['vcf_suffix'],method=['medaka','nanopolish'],barcode=barcodes[run])
    return list

def fetchAllPileups():
    list = []
    for run in barcodes:
        list += expand('data/auxiliary/pileupAnalysis/'+run+'/{barcode}.pileupanalysis.txt',barcode=barcodes[run])
    return list

### Snakemake Rules

rule generateIGVSessions:
    input:
        reference = 'data/input/nCoV-2019.reference.fasta',
        vcfFileNano = 'data/input/{run}/barcode{barcode}.nanopolish.'+config['vcf_suffix'],
        vcfFileMeda = 'data/input/{run}/barcode{barcode}.medaka.'+config['vcf_suffix'],
        alignmentFileIndex = 'data/input/{run}/barcode{barcode}.medaka.'+config['bam_suffix']+'.bai'
    output:
        report('data/output/IgvSessions/{run}/{barcode}.igv.xml',category='IGVSessions')
    params:
        alignmentFile = 'data/input/{run}/barcode{barcode}.medaka.'+config['bam_suffix'],
    conda:
        '../envs/perl.yaml'
    shell:
        'perl scripts/generate_IGV.pl --covidReference {input.reference} --BAM {params.alignmentFile} --output {output} --VCF_Medaka {input.vcfFileMeda} --VCF_Nano {input.vcfFileNano}'


rule pileupAnalysis:
    input:
        alignment = 'data/input/{run}/barcode{barcode}.medaka.'+config['bam_suffix'],
        alignment_index = 'data/input/{run}/barcode{barcode}.medaka.'+config['bam_suffix']+'.bai',
        reference = 'data/input/nCoV-2019.reference.fasta'
    wildcard_constraints:
        barcode = "\d+",
        run = "\w+"
    output:
        'data/auxiliary/pileupAnalysis/{run}/{barcode}.pileupanalysis.txt'
    conda:
        '../envs/biopythonworkbench.yaml'
    shell:
        'perl scripts/getCompleteMycoFrequencies.pl --BAM {input.alignment} --output {output} --minMappingQuality 0 --minBaseQuality 0 --referenceGenome {input.reference}'

#TODO: Looks like the hardcoded chr names could be moved to some cfg
rule annote_variant_snpeff:
    input:
        vcf = '{path}.vcf',
    output:
        annoted = '{path}.annoted.vcf'
    conda:
        '../envs/snpEff.yaml'
    shell:
       "sed 's/MN908947.3/NC_045512.2/' {input.vcf} | snpEff NC_045512.2 | sed 's/NC_045512.2/MN908947.3/' > {output.annoted}"
